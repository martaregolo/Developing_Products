install_from_swirl("Statistical Inference")
swirl()
33/36
deck
1/52
52
4/52
6/(52*51*50*49)
0
12/52
2/51
0.64
0.64
mypdf
integrate(mypdf,lower=0,upper=1.6)
1
sqrt(2)
0.997*0.001
(1-0.985)*(1-0.001)
0.000997/(0.000997+0.014985)
16/7
16/6
21/6
expect_dice
dice_high
dice_fair
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x
p
temp
mean(p)
library(swirl)
swirl()
dice_sqr
ex2_fair=sum(dice_sqr*PDF)
ex2_fair=sum(dice_sqr*dice_fair)
ex2_fair=sum(dice_fair*dice_sqr)
ex2_fair<-sum(dice_fair*dice_sqr)
ex2_fair-3.5
ex2_fair-3.5^2
sum(dice_high*dice_sqr)-3.5^2
sum(dice_high*dice_sqr)-edh^2
matrix(rnorm(10000),1000)
sd(apply(matrix(rnorm(10000),1000),1,mean))
rnorm(10000)
apply(matrix(rnorm(10000),1000),1,mean)
ok<-apply(matrix(rnorm(10000),1000),1,mean)
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
pbinom(3,5,0.8)
dbinom(3,5,0.8)
choose(5,3)*(.8)^3*(.2)^(5-3)+choose(5,4)*(.8)^4*(.2)^(5-4)+choose(5,5)*(.8)^5*(.2)^(5-5)
pbinom(2,5,0.8,lower.tail=FALSE)
qnorm(0.1)
0
qnorm(0.97,3,2)
qnorm(0.975,3,2)
1.96*2+3
1-pnorm(1200,1020,50)
pnorm(1200,1020,50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(0.75,1020,50,lower.tail = FALSE)
qnorm(0.75,1020,50)
1075
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppoisson(3,2.5*4)
ppois(3,2.5*4)
1-pbinom(5,1000,0.01)
pbinom(5,1000,.01)
ppois(5,1000*0.01)
coinPLot(10)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6+c(-1,1) *qnorm(0.975)*sqrt(0.6(1-0.6)/100)
0.6+c(-1,1)*qnorm(0.975)*sqrt(0.6(1-0.6)/100)
0.6+c(-1,1)+qnorm(0.975)*sqrt(0.6(1-0.6)/100)
0.6+c(-1,1)*qnorm(.975)*sqrt(p'(1-p')/100)
0.6+c(-1,1)*qnorm(.975)*sqrt(0.6*(1-0.6)/100)
binom.test(60,100)$conf.int
mywald(0.2)
Accompar(20)
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
pnorm(70,80,10)
qnorm(0.95,1100,75)
qnorm(0.95,1100,75/sqrt(100))
dbinom(4,5,0.5)+dbinom(5,5,0.5)
pnorm(15,10/sqrt(100))
ppois(10,5*3)
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference<-g2-g1
mean(difference)
s<-sd(difference)
mn + c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(g2,g1,paired=true)$conf.int
t.test(g2,g1,paired=TRUE)$conf.int
t.test(difference)$conf.int
(7*s_{oc}^2)+(20*s_{c}^2)
(7*15.34^2)+(20*18.23^2)
sp<-(7*15.34^2)+(20*18.23^2)
ns<-8+21-2
sp<-sp/ns
sp<-sqrt(sp/ns)
(132.86-127.44)+c(-1,+1)*qt(0.975,ns)*sp*sqrt((1/8)+(1/21))
132.86-127.44+c(-1,+1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,+1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((var(g1)*9+var(g2)*9)/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(0.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1,var.equal=TRUE, paired=FALSE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
swirl()
num<-(15.34^2/8+18.23^2/21)^2
den<-(15.34^2/8)^2/7+(18.23^2/21)^2/20
mydf<-num/den
mn+c(-1,1)*qt(0.975,mydf)*(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(0.975,mydf)*(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/sqrt(100)
32-30/1
(32-30)/(10/sqrt(16))
15
qt(0.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(2.5,15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2,lower.tail=TRUE)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,8,5,lower.tail=FALSE)
pbinom(6,8,.5,lower.tail=FALSE)
pbinom(7,8,.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
qt(0.95,8)
1100+c(-1.1)*qt(0.95,8)*30/sqrt(9)
1100+c(-1,1)*qt(0.95,8)*30/sqrt(9)
1100+c(-1,1)*1.86*30/sqrt(9)
-2*sqrt(9)/qt(0.95,8)
1100+c(-1,1)*qt(0.975,8)*30/sqrt(9)
-2*sqrt(9)/qt(0.975,8)
(3-5)+c(-1,1)*qt(0.975,18)*sp*sqrt(2/10)
sp<-sqrt(mean(0.6^2+0.68^2))
(3-5)+c(-1,1)*qt(0.975,18)*sp*sqrt(2/10)
sqrt((0.6^2+0.68^2)/2)
sp<-sqrt(mean(0.6^2,0.68^2))
(3-5)+c(-1,1)*qt(0.975,18)*sp*sqrt(2/10)
(3-5)+c(-1,1)*qt(0.975,18)*0.6412488*sqrt(2/10)
sqrt((0.6+0.68)/2)
(3-5)+c(-1,1)*qt(0.975,18)*0.8*sqrt(2/10)
4-6+c(-1.1)*qnorm(0.975)
4-6+c(-1.1)*qnorm(0.975)*sqrt(0.5^2/100+4/100)
4-6+c(-1,1)*qnorm(0.975)*sqrt(0.5^2/100+4/100)
-3-1+c(-1,1)*qt(0.975,16)*sp*sqrt(2/9)
sp<-sqrt((1.8^2+1.5^2)/2)
-3-1+c(-1,1)*qt(0.975,16)*sp*sqrt(2/9)
-3-1+c(-1,1)*qt(0.95,16)*sp*sqrt(2/9)
x<-5
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(0.95)
pnorm(30+z,20,1,lower.tail=FALSE)
pnorm(30+z,30,lower.tail=FALSE)
pnorm(30+z,32,lower.tail=FALSE)
pnorm(30+z,32,1,lower.tail=FALSE)
pnorm(30+z*2,32,2,lower.tail=FALSE)
power.t.test(n=16, delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(n=16, delta=2,sd=4,type="one.sample",alt="one.sided")$power
power.t.test(n=16, delta=100,sd=200,type="one.sample",alt="one.sided")$power
power.t.test(power=.8, delta=2/4,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=.8, delta=2,sd=4,type="one.sample",alt="one.sided")$n
power.t.test(power=.8, delta=100,sd=200,type="one.sample",alt="one.sided")$n
power.t.test(power=.8, n=26,sd=1,type="one.sample",alt="one.sided")$delta
power.t.test(power=.8, n=27,sd=1,type="one.sample",alt="one.sided")$delta
mean(140,138,150,148,135)
mean(132,135,151,146,130)
sd(140,138,150,148,135)
x<-(140,138,150,148,135)
x<-[140,138,150,148,135]
x<-"140,138,150,148,135"
sd(x)
mean(x)
x<-as.vector(140,138,150,148,135)
x<-as.numeric(140,138,150,148,135)
mean(x)
sd(x)
x<-c(140,138,150,148,135)
mean(x)
sd(x)
x2<-c((132,135,151,146,130))
x2<-c(132,135,151,146,130)
mean(x2)
t.test(x,x2,alt="two.sided",paired=TRUE)$p.value
t.test(1100,30,n=9,alfa=0.05)
pt(0.025,8)
pt(0.025,8,lower.tail=TRUE)
pt(0.025,8,lower.tail=FALSE)
1100+c(-1,1)*0.4903337*30/sqrt(9)
pt(0.975,8,lower.tail=FALSE)
1100+c(-1,1)* 0.1790582*30/sqrt(9)
qt(0.975,8,lower.tail=FALSE)
qt(0.975,8)
1100+c(-1,1)* 2.306004*30/sqrt(9)
t.test(0.75,paired=FALSE)
pbinom(3,4,0.75,lower.tail=FALSE)
pbinom(3,4,0.5,lower.tail=FALSE)
pbinom(4,4,0.5,lower.tail=FALSE)
pbinom(2,4,0.5,lower.tail=FALSE)
binom.test(3,4,alt="greater")$p.value
ppois(10/1787,1/100,lower.tail=FALSE)
ppois(10/1787,1/100,lower.tail=TRUE)
poisson.test(10,100,0.05,alt="greater")
t.test(1,-3,paired=TRUE,var.equal=TRUE)
sp<-sqrt(8*1.5^2+8*1.8^2)/16)
sp<-sqrt((8*1.5^2+8*1.8^2)/16)
t<-pt(.975,16,lower.tail=FALSE)
t<-pt(.975,16,lower.tail=TRUE)
t<-(1+3)/(sp*sqrt(1/9+1/9))
pt(t,16,lower.tail=FALSE)
qt(0.95,8)
power.t.test(100,delta=0,sd=0.04)
power.t.test(100,delta=0,sd=0.04)
power.t.test(100,delta=0,sd=0.04,alternative="one.sided")
power.t.test(100,delta=0,sd=0.04,alternative="one.sided",type="one.sample")
power.t.test(100,delta=0.01,sd=0.04,alternative="one.sided",type="one.sample")
power.t.test(power=0.9,delta=0.01,sd=0.04,alternative="one.sided",type="one.sample")
n<-40
lambda<-0.2
x<-rexp(n,lambda)
x
resamples<-matrix(sample(x,n*1000,replace=TRUE),1000,n)
means<-apply(resamples,1,mean)
means
sd(means)
mean(means)
mu<-1/lambda
sd<-1/lambda
help(curve)
install.packages("nortest")
ad.test(means)
install.packages("goftest")
ad.test(means)
library(goftest)
ad.test(means)
ad.test(means, null="normal distribution")
ad.test(means, null="normal")
help(ad.test)
ad.test(means, null="pnorm")
help(ad.test)
ad.test(means, null="pnorm",mean=mean(means), sd=sd(means))
ad.test(means,mean=mean(means), sd=sd(means), null="pnorm")
B<-10000
x<-rexp(n,lambda)
resamples<-matrix(sample(x,n*B,replace=TRUE),B,n)
means<-apply(resamples,1,mean)
mean(means)
sd(means)
ad.test(means,mean=mean(means), sd=sd(means), null="pnorm")
means
help(ad.test)
kist(rexp(1000))
hist(rexp(1000))
for (i in 1:1000) mns=c(mns,mean(rexp(40,5)))
mns=NULL
for (i in 1:1000) mns=c(mns,mean(rexp(40,5)))
mns
hist(mns)
hist(runif(1000))
library(ggpubr)
ggqqplot(means)
B<-10000
x<-rexp(n,lambda)
resamples<-matrix(sample(x,n*B,replace=TRUE),B,n)
means<-apply(resamples,1,mean)
n<-40
lambda<-0.2
B<-10000
x<-rexp(n,lambda)
resamples<-matrix(sample(x,n*B,replace=TRUE),B,n)
means<-apply(resamples,1,mean)
mean(means)
sd(means)
ggqqplot(means)
library(datasets)
data("ToothGrowth")
data<-data("ToothGrowth")
data
data("ToothGrowth")
data(ToothGrowth)
str(ToothGrowth)
ToothGrowth
summary(ToothGrowth)
help("ToothGrowth")
boxplot(ToothGrowth$len,ToothGrowth$supp, ToothGrowth$dpse)
boxplot(ToothGrowth$len,ToothGrowth$supp, ToothGrowth$dose)
boxplot(ToothGrowth$len)
boxplot(ToothGrowth$len,ToothGrowth$supp)
ggplot(ToothGrowth, aes(x=supp,y=len))+geom_boxplot(aes(fill=dose))
ggplot(ToothGrowth, aes(x=supp,y=len))+geom_boxplot(aes(fill= ToothGrowth$dose))
ggplot(ToothGrowth, aes(x=dose,y=len))+geom_boxplot()+facet_wrap(~supp)
ggplot(ToothGrowth, aes(x=dose,y=len))+geom_boxplot()
ToothGrowth$dose<-factor(ToothGrowth$dose)
ToothGrowth
summary(ToothGrowth)
ggplot(ToothGrowth, aes(x=dose,y=len))+geom_boxplot()+facet_wrap(~supp)
help("ToothGrowth")
plot(ToothGrowth$len)
len1<-filter(ToothGrowth, supp="OJ")
len1<-filter(ToothGrowth, supp=="OJ")
library(dplyr)
len1<-filter(ToothGrowth, supp=="OJ")
len1
mean(len1$len)
len2<-filter(ToothGrowth, supp=="VC")
mean(len2$len)
t.test(len2$len,len1$len,paired=FALSE,var.equal=TRUE)
t.test(len2$len,len1$len,paired=FALSE,var.equal=FALSE)
len1<-filter(ToothGrowth, dose=="0.5")
len1
mean(len1)
mean(len1$len)
len1[ToothGrowth$supp="VC"]
len1[ToothGrowth$supp=="VC"]
len1[ToothGrowth$supp=="VC",]
len1[len2$supp=="VC",]
len1[len1$supp=="VC",]
dose05<-ToothGrowth[ToothGrowth$dose=="0.5",]
t.test(dose05[dose05$supp=="VC",],dose05[dose05$supp=="OJ",],paired=FALSE,var.equal=FALSE)
t.test(ToothGrowth[ToothGrowth$supp=="VC",]$len,ToothGrowth[ToothGrowth$supp=="OJ",]$len,paired=FALSE,var.equal=FALSE)
t.test(dose05[dose05$supp=="OJ",]$len,dose05[dose05$supp=="VC",]$len,paired=FALSE,var.equal=FALSE)$cond
t.test(dose05[dose05$supp=="OJ",]$len,dose05[dose05$supp=="VC",]$len,paired=FALSE,var.equal=FALSE)$conf
t.test(dose05$len,paired=FALSE)$conf
t.test(dose05$len,paired=FALSE)
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
data<-Animals
data<-setDT(data, keep.rownames = TRUE)[]
library(MASS)
library(data.table)
data<-Animals
data<-setDT(data, keep.rownames = TRUE)[]
View(data)
mtcars
bostonhousing
housing
longley
longley
?longley
plot(longley$GNP,longley$Employed)
plot(longley$Armed.Forces,longley$Employed)
model<-lm(longley$Employed ~ longley$GNP,data=longley)
abline(model)
plot(longley$GNP,longley$Employed)
abline(model)
predict(model, newdata=longley, interval="confidence")
pred.int<-predict(model, newdata=longley, interval="prediction")
p<-ggplot(longley,aes(GNP,Employed))+geom_point()+stat_smooth(method=lm)
library(ggplot2)
p<-ggplot(longley,aes(GNP,Employed))+geom_point()+stat_smooth(method=lm)
p
p<-ggplot(longley,aes(GNP,Employed))
p
p<-ggplot(longley,aes(GNP,Employed))+geom_point()
p
p<-ggplot(longley,aes(GNP,Employed))+geom_point()+stat_smooth(method=lm)
p
p+geom_line(aes(y=lwr),color="red",linetype="dashed")+geom_line(aes(y=upr),color="red",linetype="dashed")
View(pred.int)
pred.int[1]
pred.int[1:]
pred.int[:1]
pred.int$fit
mydata <- cbind(longley, pred.int)
p+geom_line(aes(y=lwr),color="red",linetype="dashed")+geom_line(aes(y=upr),color="red",linetype="dashed")
p+geom_line(aes(y=mydata$lwr),color="red",linetype="dashed")+geom_line(aes(y=mydata$upr),color="red",linetype="dashed")
model<-lm(longley$Employed ~ longley$GNP,data=longley)
pred.int<-predict(model, newdata=longley, interval="prediction")
p<-ggplot(longley,aes(GNP,Employed))+geom_point()+stat_smooth(method=lm)
mydata <- cbind(longley, pred.int)
p+geom_line(aes(y=mydata$lwr),color="red",linetype="dashed")+geom_line(aes(y=mydata$upr),color="red",linetype="dashed")
model<-lm(longley$Employed ~ longley$Armed.Forces,data=longley)
pred.int<-predict(model, newdata=longley, interval="prediction")
p<-ggplot(longley,aes(Armed.Forces,Employed))+geom_point()+stat_smooth(method=lm)
mydata <- cbind(longley, pred.int)
p+geom_line(aes(y=mydata$lwr),color="red",linetype="dashed")+geom_line(aes(y=mydata$upr),color="red",linetype="dashed")
shiny::runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
names(mydata)
names(mydata)[1:6]
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp()
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp()
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp()
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
model<-lm(longley$Employed ~ longley[["Armed.Forces"]],data=longley)
predict(model,newdata=data.frame(y="Armed.Forces"))
View(model)
pr<-predict(model,newdata=data.frame(y=p1))
pr<-predict(model,newdata=data.frame(y="Armed.Forces"))
pr<-predict(model,newdata=data.frame(y=5))
View(model)
View(mydata)
plot(model)
5
pred.int
View(pred.int)
pred.int<-predict(model, newdata=longley, interval="prediction")
View(pred.int)
model<-lm(hp ~ mpg, data=mtcars)
predict(model, newdata=data.frame(mpg=50))
View(model)
hp
mtcars$hp
longley$Employed
mtcars$mpg
longley[["Armed.Forces"]]
model<-lm(longley$Employed ~ longley[["Armed.Forces"]],data=longley)
predict(model, newdata=data.frame(longley$Armed.Forces=50))
predict(model, newdata=data.frame(Armed.Forces=50))
mtcars
longley
model<-lm(longley$Employed ~ longley[["GNP"]],data=longley)
predict(model, newdata=data.frame(GNP=50))
predict(model, newdata=data.frame(x=50))
predict(model, newdata=data.frame(x=64))
predict(model, newdata=data.frame(x=64),interval="confidence")
M<-lm(y~x,data=df)
set.seed(123)
x<-rnorm(20,0.05)
y<-rpois(20,5)
df<-data.frame(x,y)
M<-lm(y~x,data=df)
predict(M,newdata=data.frame(x=1.2),interval="confidence")
model<-lm(longley$Employed ~ longley[["GNP"]],data=longley)
predict(M,newdata=data.frame(longley[["GNP"]]=67),interval="confidence")
r<-"GNP"
p1<-68
y<-longley$Employed
x<-longley[[r]]
model<-lm(y ~ x,data=longley)
pr<-predict(model,newdata=data.frame(x=p1))
pr
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp()
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
?longley
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
runApp('C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model')
library(rsconnect)
rsconnect::setAccountInfo(name='regolomarta',
token='5070000C139B14A7C4384918C589C895',
secret='<SECRET>')
rsconnect::setAccountInfo(name='regolomarta', token='5070000C139B14A7C4384918C589C895', secret='udKWvbBaMrX9qvXaW0YuAlHrXiKTmlYaZdZCvX0X')
deployApp()
setwd("C:/Users/secon/OneDrive/Desktop/COURSERA/Data Science Specialization/10 Developing Data Products/prediction_model")
deployApp()
runApp()
dir()
getwd()
